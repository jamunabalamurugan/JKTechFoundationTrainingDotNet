Student Management Casestudy Day 9
----------------------------------

Topics Covered
--------------
Class, Object, Variables(instance and static), Constructors, methods, get/set, datatypes, arrays


Plan
----

- Create Student class (id, name, dateofbirth,static collegeName)
  

- Create class Info
  - Write a method called as:
	public void display(Student student) {
                Console.WriteLine(student.getName() ....);
		//Code here to display the details of given student
	}

- Next create App class with main method. Use main method to call the below scenario methods only. For ex:
	public static void main(String[] args) {
		scenario1();
		//scenario2();
		//scenario3();
	}

 Then:

  - Write a method called as scenario1 to:
	- Create few objects of Student class
	- Call the display method of Info class

  - Modify Student class and introduce a member variable called as phoneNumbers of array type:
        - Accordingly, modify display method to display phone numbers of the student
	- Call the display method of Info class

	
  - Next write a method called as scenario2 to:
	- Create array of Student class and store few objects in it
	- Demonstrate how to iterate over the array and call the display method for each student


  - Next write a method called as scenario3 to:
	- Take Student data as input from the user, store it in a Student object
	- Repeat the above process using loops
	- Use Arrays to store Student objects as covered in scenario2
	- Finally iterate over the array to display all the collected data

   -Write a method called scenario4 to:
	- Take Student data as input from the user, store it in Student object
	- Repeat the above process using loops
	- Use ArrayList to store the Student objects as covered in scenario2
	- Finally iterate over the ArrayList to display all the collected data (cover foreach)
     
 - Understand the difference between static non static methods by making the display method static of Info class

- Now create Course class on your own (id, name, duration, fees)
  - Modify Info class by adding one more method:
	public void display(Course course) {
		//Code here to display the details of given course
	}
 
- Organize the code using packages/namespaces (for ex: com.at.day7)



